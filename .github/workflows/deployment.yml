name: Deploy Next.js to S3 and invalidate CloudFront

on:
  push:
    branches:
      - main
      - monorepo-ci-setting
  workflow_dispatch:

jobs:
  # 빌드 📦
  build:
    runs-on: ubuntu-latest

    # 각 프로젝트 병렬 빌드를 위한 matrix 설정 🗑️
    strategy:
      matrix:
        package:
          [
            ci-cd-sandbox,
            front_4th_chapter1-3,
            front_4th_chapter2-2,
            front_4th_chapter3-2,
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.9.0"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm --filter=${{ matrix.package }} run build

  # 배포 🚀
  deploy:
    needs: build
    runs-on: ubuntu-latest

    # 각 프로젝트 병렬 배포를 위한 matrix 및 path 설정 🪄
    # ⚠️ secrets는 보안상의 이유로 matrix.include에서 사용할 수 없음!
    strategy:
      matrix:
        package: [ci-cd-sandbox, front_4th_chapter1-3]
        path: [out, dist]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts for ${{ matrix.package }}
        uses: actions/download-artifact@v4
        with:
          name: build
          path: out

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ✅ 여기에서 secrets를 직접 참조
      - name: Deploy to S3
        run: |
          if [[ "${{ matrix.package }}" == "ci-cd-sandbox" ]]; then
            BUCKET="${{ secrets.S3_BUCKET_NAME }}"
            DISTRIBUTION="${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          elif [[ "${{ matrix.package }}" == "front_4th_chapter1-3" ]]; then
            BUCKET="${{ secrets.CHAPTER_1_3_BUCKET_NAME }}"
            DISTRIBUTION="${{ secrets.CHAPTER_1_3_DISTRIBUTION_ID }}"
          fi

          aws s3 sync out/ s3://$BUCKET --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION --paths "/*"
