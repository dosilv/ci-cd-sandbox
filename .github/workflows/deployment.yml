name: Deploy Next.js to S3 and invalidate CloudFront

on:
  push:
    branches:
      - main
      - monorepo-ci-setting
  workflow_dispatch:

jobs:
  # 빌드 📦
  build:
    runs-on: ubuntu-latest

    # 각 프로젝트 병렬 빌드를 위한 matrix 설정 🗑️
    strategy:
      matrix:
        include:
          - package: ci-cd-sandbox
            path: out
          - package: front_4th_chapter1-3
            path: apps/front_4th_chapter1-3/dist
          - package: front_4th_chapter2-2
            path: apps/front_4th_chapter2-2/dist
          - package: front_4th_chapter3-2
            path: apps/front_4th_chapter3-2/dist

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.9.0"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: |
          if [[ "${{ matrix.package }}" == "ci-cd-sandbox" ]]; then
            pnpm run build
          else
            pnpm --filter=${{ matrix.package }} run build
          fi

      # 빌드 결과물 업로드 📁
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.package }}
          path: ${{ matrix.path }}

  # 배포 🚀
  deploy:
    needs: build
    runs-on: ubuntu-latest

    # 각 프로젝트 병렬 배포를 위한 matrix 및 path 설정 🪄
    # ⚠️ secrets는 보안상의 이유로 matrix.include에서 사용할 수 없음!
    strategy:
      matrix:
        include:
          - package: ci-cd-sandbox
            path: out
          - package: front_4th_chapter1-3
            path: apps/front_4th_chapter1-3/dist
          - package: front_4th_chapter2-2
            path: apps/front_4th_chapter2-2/dist
          - package: front_4th_chapter3-2
            path: apps/front_4th_chapter3-2/dist

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts for ${{ matrix.package }}
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.package }}
          path: ${{ matrix.path }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ✅ 여기에서 secrets를 직접 참조
      # ⚠️ $GITHUB_ENV로 설정한 변수는 새로운 run 단계에서만 인식되므로 환경 변수 설정 단계 별도로 분리
      - name: Set environment variables
        run: |
          if [[ "${{ matrix.package }}" == "ci-cd-sandbox" ]]; then
            echo "BUCKET=${{ secrets.S3_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.package }}" == "front_4th_chapter1-3" ]]; then
            echo "BUCKET=${{ secrets.CHAPTER_1_3_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.CHAPTER_1_3_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.package }}" == "front_4th_chapter2-2" ]]; then
            echo "BUCKET=${{ secrets.CHAPTER_2_2_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.CHAPTER_2_2_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.package }}" == "front_4th_chapter3-2" ]]; then
            echo "BUCKET=${{ secrets.CHAPTER_3_2_BUCKET_NAME }}" >> $GITHUB_ENV
            echo "DISTRIBUTION_ID=${{ secrets.CHAPTER_3_2_DISTRIBUTION_ID }}" >> $GITHUB_ENV
          fi

      - name: Deploy to S3
        run: |
          echo "Using CloudFront Distribution ID: $DISTRIBUTION_ID"
          aws s3 sync ${{ matrix.path }} s3://$BUCKET --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
